

buildscript {
		// http://mvnrepository.com  
        repositories {
			maven { url "http://127.0.0.1:8081/nexus/content/repositories/central/" }
			maven { url "http://repository.exoplatform.org/content/groups/public/" }
        }
        dependencies {
            classpath "net.saliman:gradle-cobertura-plugin:2.2.2"
        }
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
    apply plugin: 'cobertura'
	
	// 过滤不打包的文件(只会过滤资源文件)
	jar.exclude 'log4j.properties'
	jar.exclude 'config.properties'
	jar.exclude 'config'

    test {
        ignoreFailures = true
        forkEvery = 5
        maxParallelForks = Runtime.runtime.availableProcessors()
        exclude 'org/databene/**'
    }

    cobertura {
        coverageFormats = ['xml']
    }

    [compileJava, compileTestJava]*.options*.encoding = "UTF-8"
	
	repositories {
		maven { url "http://127.0.0.1:8081/nexus/content/repositories/central/" }
		maven { url "http://repository.exoplatform.org/content/groups/public/" }
	}
	
	task copyLib(type: Sync, dependsOn: jar) {
		from configurations.compile
		from jar.archivePath
		into 'compile'
	}
	
	task copyWebapp(type: Sync) {
		from 'src/webapp'
		into 'compile/webapp'
	}
	sourceSets {
		main {
			java {
				srcDir 'src/java'
			}
			resources {
				srcDir 'src/resources'
			}
		}
	}
}
project(':share-core') {
	dependencies{
	    compile fileTree( dir: "lib", include: '*.jar' )
		compile 'javax.servlet:javax.servlet-api:3.1.0'
	    compile 'aopalliance:aopalliance:1.0'
		compile 'org.ow2.asm:asm:5.0.3'
		compile 'org.ow2.asm:asm-commons:5.0.3'
		compile 'org.aspectj:aspectjweaver:1.8.5'
		compile 'commons-cli:commons-cli:1.2'
		compile 'commons-codec:commons-codec:1.10'
		compile 'commons-io:commons-io:2.4'
		compile 'org.apache.commons:commons-math:2.2'
		compile 'org.apache.commons:commons-compress:1.9'
		compile 'org.apache.commons:commons-lang3:3.3.2'
		compile 'commons-logging:commons-logging:1.2'
		compile 'org.apache.commons:commons-pool2:2.3'
		compile 'com.alibaba:druid:1.0.13'
		compile 'com.alibaba:simpleimage:1.2.3'
		compile 'com.google.code.gson:gson:2.3.1'
		compile 'com.google.guava:guava:18.0'
		compile 'junit:junit:4.12'
		compile 'org.nutz:ssdb4j:9.2'
		compile 'org.apache.httpcomponents:httpclient:4.4.1'
		compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
		compile 'redis.clients:jedis:2.7.0'
		compile 'org.redisson:redisson:1.2.1'
		compile 'org.eclipse.jetty:jetty-alpn-client:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-alpn-server:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-annotations:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-client:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-continuation:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-deploy:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-http:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-io:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-jaas:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-jaspi:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-jmx:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-jndi:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-monitor:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-plus:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-proxy:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-quickstart:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-rewrite:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-security:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-server:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-servlet:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-servlets:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-spring:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-util:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-webapp:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-xml:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-util:9.3.0.M1'
		compile 'org.eclipse.jetty:jetty-jsp:9.3.0.M1'
		compile 'org.agilewiki.jid:jid:2.0.5.2'
		compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
		compile 'org.apache.thrift:libthrift:0.9.2'
		compile 'log4j:log4j:1.2.17'
		compile 'javax.mail:mail:1.4.7'
		compile 'com.codahale.metrics:metrics-core:3.0.2'
		compile 'com.codahale.metrics:metrics-graphite:3.0.2'
		compile 'com.codahale.metrics:metrics-healthchecks:3.0.2'
		compile 'com.codahale.metrics:metrics-httpclient:3.0.2'
		compile 'com.codahale.metrics:metrics-json:3.0.2'
		compile 'com.codahale.metrics:metrics-jvm:3.0.2'
		compile 'com.codahale.metrics:metrics-servlet:3.0.2'
		compile 'com.codahale.metrics:metrics-servlets:3.0.2'
		compile 'org.mongodb:mongo-java-driver:3.0.0'
		compile 'org.msgpack:msgpack:0.6.11'
		compile 'mysql:mysql-connector-java:5.1.35'
		compile 'io.netty:netty:3.10.0.Final'
		compile 'io.netty:netty-all:4.0.26.Final'
		compile 'net.sf.supercsv:super-csv:2.3.1'
		compile 'com.thoughtworks.paranamer:paranamer:2.7'
		compile 'com.belerweb:pinyin4j:2.5.0' 
		compile 'com.google.protobuf:protobuf-java:2.5.0'
		compile 'com.basho.riak:riak-client:2.0.0'
		compile 'com.basho.riak.protobuf:riak-pb:2.0.0.16'
		compile 'javax.servlet:jstl:1.2'
		compile 'org.slf4j:slf4j-api:1.7.7'
		compile 'org.slf4j:slf4j-log4j12:1.7.7'
		compile 'org.xerial.snappy:snappy-java:1.1.1.6'
		compile 'org.springframework:spring-aop:4.1.6.RELEASE'
		compile 'org.springframework:spring-aspects:4.1.6.RELEASE'
		compile 'org.springframework:spring-beans:4.1.6.RELEASE'
		compile 'org.springframework:spring-context:4.1.6.RELEASE'
		compile 'org.springframework:spring-core:4.1.6.RELEASE'
		compile 'org.springframework:spring-expression:4.1.6.RELEASE'
		compile 'org.springframework:spring-jdbc:4.1.6.RELEASE'
		compile 'org.springframework:spring-orm:4.1.6.RELEASE'
		compile 'org.springframework:spring-test:4.1.6.RELEASE'
		compile 'org.springframework:spring-tx:4.1.6.RELEASE'
		compile 'org.springframework:spring-web:4.1.6.RELEASE'
		compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
		compile 'org.mybatis:mybatis:3.2.8'
    }
}
project(':share-client') {
	dependencies{
	   compile project(':share-core')
	   compile project(':share-test')
	   compile fileTree( dir: "lib", include: '*.jar' )
	}
	task deploy(dependsOn: [copyLib, copyWebapp])
}
project(':share-test') {
	dependencies{
	   compile project(':share-core')
	   compile fileTree( dir: "lib", include: '*.jar' )
	}
	task deploy(dependsOn: [copyLib, copyWebapp])
}
project(':share-admin') {
	dependencies{
	   compile project(':share-core')
	   compile fileTree( dir: "lib", include: '*.jar' )
	}
	task deploy(dependsOn: [copyLib, copyWebapp])
}